{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "3062001189913211022"
    }
  },
  "parameters": {
    "virtualMachine_AdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the admin account of the Virtual Machines"
      }
    },
    "virtualMachine_AdminPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "Password for the admin account of the Virtual Machines.\nEnsure the password meets typical Azure VM password requirements.\n"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D2as_v4",
      "metadata": {
        "description": "Size of the Virtual Machines"
      }
    },
    "acceleratedNetworking": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "True enables Accelerated Networking and False disabled it.  \nNot all VM sizes support Accel Net (i.e. Standard_B2ms).  \nI'd recommend Standard_D2s_v3 for a cheap VM that supports Accel Net.\n"
      }
    },
    "vpn_SharedKey": {
      "type": "securestring",
      "minLength": 6,
      "metadata": {
        "description": "VPN Shared Key used for authenticating VPN connections"
      }
    },
    "storageAccount_Name": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Storage account name restrictions:\n- Storage account names must be between 3 and 24 characters in length and may contain numbers and lowercase letters only.\n- Your storage account name must be unique within Azure. No two storage accounts can have the same name.\n"
      }
    },
    "tagValues": {
      "type": "object",
      "defaultValue": {
        "Training": "AzureFirewall"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "virtualMachine_Hub_Dns_Name": "hub-dnsVM",
    "virtualMachine_SpokeA_Client_Name": "spokeA-clientVM",
    "virtualMachine_SpokeB_Iis_Name": "spokeB-iisVM",
    "virtualMachine_Onprem_Dns_Name": "onprem-dnsVM",
    "virtualMachine_Onprem_Client_Name": "onprem-clientVM"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2024-05-01",
      "name": "genericNSG",
      "location": "[variables('location')]",
      "tags": "[parameters('tagValues')]"
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-02-01",
      "name": "hub_VNet",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "General",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', 'hub_RouteTable')]"
              },
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'genericNSG')]"
              },
              "natGateway": {
                "id": "[reference(resourceId('Microsoft.Resources/deployments', 'natGateway_Hub'), '2022-09-01').outputs.natGateway_Id.value]"
              }
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "10.0.1.0/24",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', 'hub_RouteTable')]"
              }
            }
          },
          {
            "name": "AzureFirewallSubnet",
            "properties": {
              "addressPrefix": "10.0.2.0/24"
            }
          },
          {
            "name": "AzureFirewallManagementSubnet",
            "properties": {
              "addressPrefix": "10.0.3.0/24"
            }
          }
        ]
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'natGateway_Hub')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'genericNSG')]",
        "[resourceId('Microsoft.Network/routeTables', 'hub_RouteTable')]"
      ]
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2024-05-01",
      "name": "hub_RouteTable",
      "location": "[variables('location')]",
      "properties": {
        "disableBgpRoutePropagation": false,
        "routes": [
          {
            "name": "toSpokeA",
            "properties": {
              "addressPrefix": "10.1.0.0/16",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.0.2.4"
            }
          },
          {
            "name": "toSpokeB",
            "properties": {
              "addressPrefix": "10.2.0.0/16",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.0.2.4"
            }
          }
        ]
      },
      "tags": "[parameters('tagValues')]"
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-02-01",
      "name": "spokeA_VNet",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.1.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "General",
            "properties": {
              "addressPrefix": "10.1.0.0/24",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', 'spokeA_RouteTable')]"
              },
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'genericNSG')]"
              },
              "natGateway": {
                "id": "[reference(resourceId('Microsoft.Resources/deployments', 'natGateway_SpokeA'), '2022-09-01').outputs.natGateway_Id.value]"
              }
            }
          }
        ]
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'natGateway_SpokeA')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'genericNSG')]",
        "[resourceId('Microsoft.Network/routeTables', 'spokeA_RouteTable')]"
      ]
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2024-05-01",
      "name": "spokeA_RouteTable",
      "location": "[variables('location')]",
      "properties": {
        "disableBgpRoutePropagation": false,
        "routes": [
          {
            "name": "toHub",
            "properties": {
              "addressPrefix": "10.0.0.0/16",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.0.2.4"
            }
          },
          {
            "name": "toSpokeB",
            "properties": {
              "addressPrefix": "10.2.0.0/16",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.0.2.4"
            }
          },
          {
            "name": "toOnPrem",
            "properties": {
              "addressPrefix": "10.100.0.0/16",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.0.2.4"
            }
          },
          {
            "name": "toGoogle",
            "properties": {
              "addressPrefix": "8.8.8.8/32",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.0.2.4"
            }
          }
        ]
      },
      "tags": "[parameters('tagValues')]"
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-02-01",
      "name": "spokeB_VNet",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.2.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "General",
            "properties": {
              "addressPrefix": "10.2.0.0/24",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', 'spokeB_RouteTable')]"
              },
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'genericNSG')]"
              },
              "natGateway": {
                "id": "[reference(resourceId('Microsoft.Resources/deployments', 'natGateway_SpokeB'), '2022-09-01').outputs.natGateway_Id.value]"
              }
            }
          },
          {
            "name": "PrivateEndpoint",
            "properties": {
              "addressPrefix": "10.2.1.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'genericNSG')]"
              }
            }
          }
        ]
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'natGateway_SpokeB')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'genericNSG')]",
        "[resourceId('Microsoft.Network/routeTables', 'spokeB_RouteTable')]"
      ]
    },
    {
      "type": "Microsoft.Network/routeTables",
      "apiVersion": "2024-05-01",
      "name": "spokeB_RouteTable",
      "location": "[variables('location')]",
      "properties": {
        "disableBgpRoutePropagation": false,
        "routes": [
          {
            "name": "toHub",
            "properties": {
              "addressPrefix": "10.0.0.0/16",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.0.2.4"
            }
          },
          {
            "name": "toSpokeA",
            "properties": {
              "addressPrefix": "10.1.0.0/16",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.0.2.4"
            }
          },
          {
            "name": "toOnPrem",
            "properties": {
              "addressPrefix": "10.100.0.0/16",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "10.0.2.4"
            }
          }
        ]
      },
      "tags": "[parameters('tagValues')]"
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "[variables('virtualMachine_Hub_Dns_Name')]",
      "location": "[variables('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "additionalCapabilities": {
          "hibernationEnabled": false
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2025-datacenter-azure-edition",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[format('{0}_OsDisk_1', variables('virtualMachine_Hub_Dns_Name'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "deleteOption": "Delete",
            "diskSizeGB": 127
          },
          "dataDisks": [],
          "diskControllerType": "SCSI"
        },
        "osProfile": {
          "computerName": "[variables('virtualMachine_Hub_Dns_Name')]",
          "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
          "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByPlatform",
              "automaticByPlatformSettings": {
                "rebootSetting": "IfRequired"
              },
              "assessmentMode": "ImageDefault",
              "enableHotpatching": true
            }
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "securityProfile": {
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          },
          "securityType": "TrustedLaunch"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('virtualMachine_Hub_Dns_Name')))]",
              "properties": {
                "deleteOption": "Delete"
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('virtualMachine_Hub_Dns_Name')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}-nic', variables('virtualMachine_Hub_Dns_Name'))]",
      "location": "[variables('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.0.0.4",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'hub_VNet'), '2021-02-01').subnets[0].id]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]"
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'hub_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-11-01",
      "name": "[format('{0}/{1}', variables('virtualMachine_Hub_Dns_Name'), 'installcustomscript')]",
      "location": "[variables('location')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://supportability.visualstudio.com/_git/AzureNetworking?path=/.LabBoxRepo/Hybrid/AzFW_Basic-Training/WinServ2025_ConfigScript.ps1"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2025_ConfigScript.ps1 -Username {0} -Type DNS', parameters('virtualMachine_AdminUsername'))]"
        }
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachine_Hub_Dns_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "[variables('virtualMachine_SpokeA_Client_Name')]",
      "location": "[variables('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "additionalCapabilities": {
          "hibernationEnabled": false
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2025-datacenter-azure-edition",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[format('{0}_OsDisk_1', variables('virtualMachine_SpokeA_Client_Name'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "deleteOption": "Delete",
            "diskSizeGB": 127
          },
          "dataDisks": [],
          "diskControllerType": "SCSI"
        },
        "osProfile": {
          "computerName": "[variables('virtualMachine_SpokeA_Client_Name')]",
          "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
          "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByPlatform",
              "automaticByPlatformSettings": {
                "rebootSetting": "IfRequired"
              },
              "assessmentMode": "ImageDefault",
              "enableHotpatching": true
            }
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "securityProfile": {
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          },
          "securityType": "TrustedLaunch"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('virtualMachine_SpokeA_Client_Name')))]",
              "properties": {
                "deleteOption": "Delete"
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('virtualMachine_SpokeA_Client_Name')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}-nic', variables('virtualMachine_SpokeA_Client_Name'))]",
      "location": "[variables('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.1.0.4",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'spokeA_VNet'), '2021-02-01').subnets[0].id]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]"
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'spokeA_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-11-01",
      "name": "[format('{0}/{1}', variables('virtualMachine_SpokeA_Client_Name'), 'installcustomscript')]",
      "location": "[variables('location')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://supportability.visualstudio.com/_git/AzureNetworking?path=/.LabBoxRepo/Hybrid/AzFW_Basic-Training/WinServ2025_ConfigScript.ps1"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2025_ConfigScript.ps1 -Username {0} -Type General', parameters('virtualMachine_AdminUsername'))]"
        }
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachine_SpokeA_Client_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "[variables('virtualMachine_SpokeB_Iis_Name')]",
      "location": "[variables('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "additionalCapabilities": {
          "hibernationEnabled": false
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2025-datacenter-azure-edition",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[format('{0}_OsDisk_1', variables('virtualMachine_SpokeB_Iis_Name'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "deleteOption": "Delete",
            "diskSizeGB": 127
          },
          "dataDisks": [],
          "diskControllerType": "SCSI"
        },
        "osProfile": {
          "computerName": "[variables('virtualMachine_SpokeB_Iis_Name')]",
          "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
          "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByPlatform",
              "automaticByPlatformSettings": {
                "rebootSetting": "IfRequired"
              },
              "assessmentMode": "ImageDefault",
              "enableHotpatching": true
            }
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "securityProfile": {
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          },
          "securityType": "TrustedLaunch"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('virtualMachine_SpokeB_Iis_Name')))]",
              "properties": {
                "deleteOption": "Delete"
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('virtualMachine_SpokeB_Iis_Name')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}-nic', variables('virtualMachine_SpokeB_Iis_Name'))]",
      "location": "[variables('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.2.0.4",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'spokeB_VNet'), '2021-02-01').subnets[0].id]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]"
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'spokeB_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-11-01",
      "name": "[format('{0}/{1}', variables('virtualMachine_SpokeB_Iis_Name'), 'installcustomscript')]",
      "location": "[variables('location')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://supportability.visualstudio.com/_git/AzureNetworking?path=/.LabBoxRepo/Hybrid/AzFW_Basic-Training/WinServ2025_ConfigScript.ps1"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2025_ConfigScript.ps1 -Username {0} -Type WebServer', parameters('virtualMachine_AdminUsername'))]"
        }
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachine_SpokeB_Iis_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccount_Name')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "dnsEndpointType": "Standard",
        "defaultToOAuthAuthentication": true,
        "publicNetworkAccess": "Enabled",
        "allowCrossTenantReplication": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": false,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Deny"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "requireInfrastructureEncryption": false,
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      },
      "tags": "[parameters('tagValues')]"
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-02-01",
      "name": "onprem_VNet",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.100.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "General",
            "properties": {
              "addressPrefix": "10.100.0.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'genericNSG')]"
              },
              "natGateway": {
                "id": "[reference(resourceId('Microsoft.Resources/deployments', 'natGateway_OnPrem'), '2022-09-01').outputs.natGateway_Id.value]"
              }
            }
          },
          {
            "name": "GatewaySubnet",
            "properties": {
              "addressPrefix": "10.100.1.0/24"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'natGateway_OnPrem')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'genericNSG')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "[variables('virtualMachine_Onprem_Dns_Name')]",
      "location": "[variables('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "additionalCapabilities": {
          "hibernationEnabled": false
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2025-datacenter-azure-edition",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[format('{0}_OsDisk_1', variables('virtualMachine_Onprem_Dns_Name'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "deleteOption": "Delete",
            "diskSizeGB": 127
          },
          "dataDisks": [],
          "diskControllerType": "SCSI"
        },
        "osProfile": {
          "computerName": "[variables('virtualMachine_Onprem_Dns_Name')]",
          "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
          "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByPlatform",
              "automaticByPlatformSettings": {
                "rebootSetting": "IfRequired"
              },
              "assessmentMode": "ImageDefault",
              "enableHotpatching": true
            }
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "securityProfile": {
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          },
          "securityType": "TrustedLaunch"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('virtualMachine_Onprem_Dns_Name')))]",
              "properties": {
                "deleteOption": "Delete"
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('virtualMachine_Onprem_Dns_Name')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}-nic', variables('virtualMachine_Onprem_Dns_Name'))]",
      "location": "[variables('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.100.0.4",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'onprem_VNet'), '2021-02-01').subnets[0].id]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]"
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'onprem_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-11-01",
      "name": "[format('{0}/{1}', variables('virtualMachine_Onprem_Dns_Name'), 'installcustomscript')]",
      "location": "[variables('location')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://supportability.visualstudio.com/_git/AzureNetworking?path=/.LabBoxRepo/Hybrid/AzFW_Basic-Training/WinServ2025_ConfigScript.ps1"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2025_ConfigScript.ps1 -Username {0} -Type DNS', parameters('virtualMachine_AdminUsername'))]"
        }
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachine_Onprem_Dns_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-07-01",
      "name": "[variables('virtualMachine_Onprem_Client_Name')]",
      "location": "[variables('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "additionalCapabilities": {
          "hibernationEnabled": false
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2025-datacenter-azure-edition",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Windows",
            "name": "[format('{0}_OsDisk_1', variables('virtualMachine_Onprem_Client_Name'))]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "deleteOption": "Delete",
            "diskSizeGB": 127
          },
          "dataDisks": [],
          "diskControllerType": "SCSI"
        },
        "osProfile": {
          "computerName": "[variables('virtualMachine_Onprem_Client_Name')]",
          "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
          "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
          "windowsConfiguration": {
            "provisionVMAgent": true,
            "enableAutomaticUpdates": true,
            "patchSettings": {
              "patchMode": "AutomaticByPlatform",
              "automaticByPlatformSettings": {
                "rebootSetting": "IfRequired"
              },
              "assessmentMode": "ImageDefault",
              "enableHotpatching": true
            }
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "securityProfile": {
          "uefiSettings": {
            "secureBootEnabled": true,
            "vTpmEnabled": true
          },
          "securityType": "TrustedLaunch"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('virtualMachine_Onprem_Client_Name')))]",
              "properties": {
                "deleteOption": "Delete"
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic', variables('virtualMachine_Onprem_Client_Name')))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2024-01-01",
      "name": "[format('{0}-nic', variables('virtualMachine_Onprem_Client_Name'))]",
      "location": "[variables('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "10.100.0.5",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'onprem_VNet'), '2021-02-01').subnets[0].id]"
              },
              "primary": true,
              "privateIPAddressVersion": "IPv4"
            }
          }
        ],
        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]"
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'onprem_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-11-01",
      "name": "[format('{0}/{1}', variables('virtualMachine_Onprem_Client_Name'), 'installcustomscript')]",
      "location": "[variables('location')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.9",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://supportability.visualstudio.com/_git/AzureNetworking?path=/.LabBoxRepo/Hybrid/AzFW_Basic-Training/WinServ2025_ConfigScript.ps1"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2025_ConfigScript.ps1 -Username {0} -Type General', parameters('virtualMachine_AdminUsername'))]"
        }
      },
      "tags": "[parameters('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachine_Onprem_Client_Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-11-01",
      "name": "AzFW_PIP",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      },
      "tags": "[parameters('tagValues')]"
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2022-11-01",
      "name": "AzFW_Management_PIP",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Regional"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4,
        "ipTags": []
      },
      "tags": "[parameters('tagValues')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "natGateway_Hub",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "natGateway_Name": {
            "value": "NATGateway_Hub"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "3185526592486626394"
            }
          },
          "parameters": {
            "natGateway_Name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}_VIP', parameters('natGateway_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/natGateways",
              "apiVersion": "2024-05-01",
              "name": "[parameters('natGateway_Name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "idleTimeoutInMinutes": 4,
                "publicIpAddresses": [
                  {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('natGateway_Name')))]"
                  }
                ]
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('natGateway_Name')))]"
              ]
            }
          ],
          "outputs": {
            "natGateway_Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/natGateways', parameters('natGateway_Name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "natGateway_SpokeA",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "natGateway_Name": {
            "value": "NATGateway_SpokeA"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "3185526592486626394"
            }
          },
          "parameters": {
            "natGateway_Name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}_VIP', parameters('natGateway_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/natGateways",
              "apiVersion": "2024-05-01",
              "name": "[parameters('natGateway_Name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "idleTimeoutInMinutes": 4,
                "publicIpAddresses": [
                  {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('natGateway_Name')))]"
                  }
                ]
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('natGateway_Name')))]"
              ]
            }
          ],
          "outputs": {
            "natGateway_Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/natGateways', parameters('natGateway_Name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "natGateway_SpokeB",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "natGateway_Name": {
            "value": "NATGateway_SpokeB"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "3185526592486626394"
            }
          },
          "parameters": {
            "natGateway_Name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}_VIP', parameters('natGateway_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/natGateways",
              "apiVersion": "2024-05-01",
              "name": "[parameters('natGateway_Name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "idleTimeoutInMinutes": 4,
                "publicIpAddresses": [
                  {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('natGateway_Name')))]"
                  }
                ]
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('natGateway_Name')))]"
              ]
            }
          ],
          "outputs": {
            "natGateway_Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/natGateways', parameters('natGateway_Name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "peerings_Hub_to_Spokes_NoGateway",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_Hub_Id": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks', 'hub_VNet')]"
          },
          "virtualNetwork_Spoke_Ids": {
            "value": [
              "[resourceId('Microsoft.Network/virtualNetworks', 'spokeA_VNet')]",
              "[resourceId('Microsoft.Network/virtualNetworks', 'spokeB_VNet')]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "9093547247946164556"
            }
          },
          "parameters": {
            "virtualNetwork_Hub_Id": {
              "type": "string",
              "metadata": {
                "description": "Resource Id of the Hub Virtual Network"
              }
            },
            "virtualNetwork_Spoke_Ids": {
              "type": "array",
              "metadata": {
                "description": "Array of Resource Ids of the Spoke Virtual Networks"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "virtualNetworkPeering_Hub_to_Spoke",
                "count": "[length(parameters('virtualNetwork_Spoke_Ids'))]"
              },
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2024-05-01",
              "name": "[format('{0}/to{1}', split(parameters('virtualNetwork_Hub_Id'), '/')[8], split(parameters('virtualNetwork_Spoke_Ids')[copyIndex()], '/')[8])]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[parameters('virtualNetwork_Spoke_Ids')[copyIndex()]]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "useRemoteGateways": false,
                "allowGatewayTransit": true
              }
            },
            {
              "copy": {
                "name": "virtualNetworkPeering_Spokes_to_Hub",
                "count": "[length(parameters('virtualNetwork_Spoke_Ids'))]"
              },
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2024-05-01",
              "name": "[format('{0}/to{1}', split(parameters('virtualNetwork_Spoke_Ids')[copyIndex()], '/')[8], split(parameters('virtualNetwork_Hub_Id'), '/')[8])]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[parameters('virtualNetwork_Hub_Id')]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "useRemoteGateways": false,
                "allowGatewayTransit": false
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'hub_VNet')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'spokeA_VNet')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'spokeB_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "storageAccount_Blob_PrivateEndpoint",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "groupID": {
            "value": "blob"
          },
          "privateDNSZone_Name": {
            "value": "[format('privatelink.blob.{0}', environment().suffixes.storage)]"
          },
          "privateEndpoint_Name": {
            "value": "[format('spokeB_{0}_blob_PrivateEndpoint', parameters('storageAccount_Name'))]"
          },
          "privateEndpoint_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'spokeB_VNet'), '2021-02-01').subnets[1].id]"
          },
          "privateLinkServiceId": {
            "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name'))]"
          },
          "virtualNetwork_IDs": {
            "value": [
              "[resourceId('Microsoft.Network/virtualNetworks', 'hub_VNet')]",
              "[resourceId('Microsoft.Network/virtualNetworks', 'spokeA_VNet')]",
              "[resourceId('Microsoft.Network/virtualNetworks', 'spokeB_VNet')]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "339027376688421692"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "privateEndpoint_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Private Endpoint"
              }
            },
            "privateLinkServiceId": {
              "type": "string"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Subnet ID that the Private Endpoint will be deployed to"
              }
            },
            "virtualNetwork_IDs": {
              "type": "array",
              "metadata": {
                "description": "Resource ID of the Virtual Networks to be linked to the Private DNS Zone"
              }
            },
            "groupID": {
              "type": "string",
              "metadata": {
                "description": "The ID of a group obtained from the remote resource that this private endpoint should connect to."
              }
            },
            "privateDNSZone_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Private DNS Zone\nExample: privatelink.blob.${environment().suffixes.storage}"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "resource_Name": "[last(split(parameters('privateLinkServiceId'), '/'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-05-01",
              "name": "[parameters('privateEndpoint_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}_to_{1}', parameters('privateEndpoint_Name'), variables('resource_Name'))]",
                    "properties": {
                      "privateLinkServiceId": "[parameters('privateLinkServiceId')]",
                      "groupIds": [
                        "[parameters('groupID')]"
                      ]
                    }
                  }
                ],
                "subnet": {
                  "id": "[parameters('privateEndpoint_SubnetID')]"
                }
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('privateDNSZone_Name')]",
              "location": "global",
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-04-01",
              "name": "[format('{0}/{1}', parameters('privateEndpoint_Name'), format('{0}ZoneGroup', parameters('groupID')))]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "default",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZone_Name'))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZone_Name'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_Name'))]"
              ]
            },
            {
              "copy": {
                "name": "virtualNetworkLink_File",
                "count": "[length(parameters('virtualNetwork_IDs'))]"
              },
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2018-09-01",
              "name": "[format('{0}/{1}', parameters('privateDNSZone_Name'), format('{0}_to_{1}', parameters('privateEndpoint_Name'), last(split(parameters('virtualNetwork_IDs')[copyIndex()], '/'))))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[parameters('virtualNetwork_IDs')[copyIndex()]]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZone_Name'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_Name'))]"
              ]
            }
          ],
          "outputs": {
            "privateEndpoint_NetworkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_Name')), '2023-05-01').customNetworkInterfaceName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount_Name'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'hub_VNet')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'spokeA_VNet')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'spokeB_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "AllBastionResources",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "peered_VirtualNetwork_Ids": {
            "value": [
              "[resourceId('Microsoft.Network/virtualNetworks', 'hub_VNet')]",
              "[resourceId('Microsoft.Network/virtualNetworks', 'spokeA_VNet')]",
              "[resourceId('Microsoft.Network/virtualNetworks', 'spokeB_VNet')]",
              "[resourceId('Microsoft.Network/virtualNetworks', 'onprem_VNet')]"
            ]
          },
          "bastion_name": {
            "value": "Bastion"
          },
          "virtualNetwork_AddressPrefix": {
            "value": "10.200.0.0/24"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "14054073123741368988"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter location that the main resouces will be deployed to."
              }
            },
            "bastion_name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Bastion"
              }
            },
            "bastion_SKU": {
              "type": "string",
              "defaultValue": "Standard"
            },
            "peered_VirtualNetwork_Ids": {
              "type": "array"
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2024-05-01",
              "name": "[format('{0}_vnet', parameters('bastion_name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetwork_AddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "AzureBastionSubnet",
                    "properties": {
                      "addressPrefix": "[parameters('virtualNetwork_AddressPrefix')]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  }
                ],
                "enableDdosProtection": false
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('bastion_name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "bastion_SubnetID": {
                    "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}_vnet', parameters('bastion_name'))), '2024-05-01').subnets[0].id]"
                  },
                  "bastion_name": {
                    "value": "[parameters('bastion_name')]"
                  },
                  "bastion_SKU": {
                    "value": "[parameters('bastion_SKU')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "8940753681302617038"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter location that the main resouces will be deployed to."
                      }
                    },
                    "bastion_name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Azure Bastion"
                      }
                    },
                    "bastion_SubnetID": {
                      "type": "string",
                      "metadata": {
                        "description": "Resource ID of the subnet the Azure Bastion will be placed in.  The name of the subnet must be \"AzureBastionSubnet\""
                      }
                    },
                    "enableTunneling": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "enableIpConnect": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "disableCopyPaste": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "enableShareableLink": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "enableFileCopy": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "enableKerberos": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "enablePrivateOnlyBastion": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "bastion_SKU": {
                      "type": "string",
                      "defaultValue": "Basic",
                      "allowedValues": [
                        "Basic",
                        "Standard",
                        "Premium"
                      ],
                      "metadata": {
                        "description": "SKU of the Azure Bastion"
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/bastionHosts",
                      "apiVersion": "2024-05-01",
                      "name": "[parameters('bastion_name')]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "[parameters('bastion_SKU')]"
                      },
                      "properties": {
                        "scaleUnits": 2,
                        "enableTunneling": "[parameters('enableTunneling')]",
                        "enableIpConnect": "[parameters('enableIpConnect')]",
                        "disableCopyPaste": "[parameters('disableCopyPaste')]",
                        "enableShareableLink": "[parameters('enableShareableLink')]",
                        "enableFileCopy": "[parameters('enableFileCopy')]",
                        "enableKerberos": "[parameters('enableKerberos')]",
                        "enablePrivateOnlyBastion": "[parameters('enablePrivateOnlyBastion')]",
                        "ipConfigurations": [
                          {
                            "name": "IpConf",
                            "properties": {
                              "privateIPAllocationMethod": "Dynamic",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('bastion_name')))]"
                              },
                              "subnet": {
                                "id": "[parameters('bastion_SubnetID')]"
                              }
                            }
                          }
                        ]
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('bastion_name')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2022-09-01",
                      "name": "[format('{0}_VIP', parameters('bastion_name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', format('{0}_vnet', parameters('bastion_name')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "bastionVNETPeering",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "bastion_VirtualNetwork_Id": {
                    "value": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}_vnet', parameters('bastion_name')))]"
                  },
                  "other_VirtualNetwork_Ids": {
                    "value": "[parameters('peered_VirtualNetwork_Ids')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "17047602974184826442"
                    }
                  },
                  "parameters": {
                    "bastion_VirtualNetwork_Id": {
                      "type": "string"
                    },
                    "other_VirtualNetwork_Ids": {
                      "type": "array"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "bastion_to_other_VirtualNetwork_Peerings",
                        "count": "[length(parameters('other_VirtualNetwork_Ids'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('bastion_to_{0}', split(parameters('other_VirtualNetwork_Ids')[copyIndex()], '/')[8])]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "virtualNetwork1_Id": {
                            "value": "[parameters('bastion_VirtualNetwork_Id')]"
                          },
                          "virtualNetwork2_Id": {
                            "value": "[parameters('other_VirtualNetwork_Ids')[copyIndex()]]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.32.4.45862",
                              "templateHash": "14118566146782858923"
                            }
                          },
                          "parameters": {
                            "virtualNetwork1_Id": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the First Virtual Network"
                              }
                            },
                            "virtualNetwork2_Id": {
                              "type": "string",
                              "metadata": {
                                "description": "Name of the Second Virtual Network"
                              }
                            }
                          },
                          "variables": {
                            "virtualNetwork1_Name": "[split(parameters('virtualNetwork1_Id'), '/')[8]]",
                            "virtualNetwork2_Name": "[split(parameters('virtualNetwork2_Id'), '/')[8]]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}/to{1}', variables('virtualNetwork1_Name'), variables('virtualNetwork2_Name'))]",
                              "properties": {
                                "remoteVirtualNetwork": {
                                  "id": "[parameters('virtualNetwork2_Id')]"
                                },
                                "allowVirtualNetworkAccess": true,
                                "allowForwardedTraffic": true,
                                "useRemoteGateways": false,
                                "allowGatewayTransit": false
                              }
                            },
                            {
                              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                              "apiVersion": "2022-09-01",
                              "name": "[format('{0}/to{1}', variables('virtualNetwork2_Name'), variables('virtualNetwork1_Name'))]",
                              "properties": {
                                "remoteVirtualNetwork": {
                                  "id": "[parameters('virtualNetwork1_Id')]"
                                },
                                "allowVirtualNetworkAccess": true,
                                "allowForwardedTraffic": true,
                                "useRemoteGateways": false,
                                "allowGatewayTransit": false
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', format('{0}_vnet', parameters('bastion_name')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'hub_VNet')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'onprem_VNet')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'spokeA_VNet')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'spokeB_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "natGateway_OnPrem",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "natGateway_Name": {
            "value": "NATGateway_OnPrem"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "3185526592486626394"
            }
          },
          "parameters": {
            "natGateway_Name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}_VIP', parameters('natGateway_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/natGateways",
              "apiVersion": "2024-05-01",
              "name": "[parameters('natGateway_Name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "idleTimeoutInMinutes": 4,
                "publicIpAddresses": [
                  {
                    "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('natGateway_Name')))]"
                  }
                ]
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('natGateway_Name')))]"
              ]
            }
          ],
          "outputs": {
            "natGateway_Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/natGateways', parameters('natGateway_Name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "onprem_to_Hub_VirtualNetworkGateways_and_Connections",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location_VirtualNetworkGateway1": {
            "value": "[variables('location')]"
          },
          "asn_VirtualNetworkGateway1": {
            "value": 65000
          },
          "name_VirtualNetworkGateway1": {
            "value": "onprem_VNG"
          },
          "subnetId_VirtualNetworkGateway1": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'onprem_VNet'), '2021-02-01').subnets[1].id]"
          },
          "location_VirtualNetworkGateway2": {
            "value": "[variables('location')]"
          },
          "asn_VirtualNetworkGateway2": {
            "value": 65001
          },
          "name_VirtualNetworkGateway2": {
            "value": "hub_VNG"
          },
          "subnetId_VirtualNetworkGateway2": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'hub_VNet'), '2021-02-01').subnets[1].id]"
          },
          "vpn_SharedKey": {
            "value": "[parameters('vpn_SharedKey')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "17715357030864752259"
            }
          },
          "parameters": {
            "location_VirtualNetworkGateway1": {
              "type": "string"
            },
            "asn_VirtualNetworkGateway1": {
              "type": "int"
            },
            "name_VirtualNetworkGateway1": {
              "type": "string"
            },
            "subnetId_VirtualNetworkGateway1": {
              "type": "string"
            },
            "location_VirtualNetworkGateway2": {
              "type": "string"
            },
            "asn_VirtualNetworkGateway2": {
              "type": "int"
            },
            "name_VirtualNetworkGateway2": {
              "type": "string"
            },
            "subnetId_VirtualNetworkGateway2": {
              "type": "string"
            },
            "vpn_SharedKey": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "virtualNetworkGateway1",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location_VirtualNetworkGateway1')]"
                  },
                  "virtualNetworkGateway_ASN": {
                    "value": "[parameters('asn_VirtualNetworkGateway1')]"
                  },
                  "virtualNetworkGateway_Name": {
                    "value": "[parameters('name_VirtualNetworkGateway1')]"
                  },
                  "virtualNetworkGateway_Subnet_ResourceID": {
                    "value": "[parameters('subnetId_VirtualNetworkGateway1')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "15330167770294849167"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter that the resources are deployed to"
                      }
                    },
                    "virtualNetworkGateway_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Azure Virtual Network Gateway"
                      }
                    },
                    "virtualNetworkGateway_SKU": {
                      "type": "string",
                      "defaultValue": "VpnGw1",
                      "allowedValues": [
                        "Basic",
                        "VpnGw1",
                        "VpnGw2",
                        "VpnGw3",
                        "VpnGw4",
                        "VpnGw5",
                        "VpnGw1AZ",
                        "VpnGw2AZ",
                        "VpnGw3AZ",
                        "VpnGw4AZ",
                        "VpnGw5AZ"
                      ],
                      "metadata": {
                        "description": "SKU of the Virtual Network Gateway"
                      }
                    },
                    "vpnGatewayGeneration": {
                      "type": "string",
                      "defaultValue": "Generation1",
                      "allowedValues": [
                        "Generation1",
                        "Generation2"
                      ],
                      "metadata": {
                        "description": "Generation of the Virtual Network Gateway SKU\nGeneration1: Basic, VpnGw1-3, VpnGw1-3AZ\nGeneration2: VpnGw2-5, VpnGw2-5Az"
                      }
                    },
                    "virtualNetworkGateway_ASN": {
                      "type": "int",
                      "metadata": {
                        "description": "Virtul Network Gateway ASN for BGP"
                      }
                    },
                    "virtualNetworkGateway_Subnet_ResourceID": {
                      "type": "string",
                      "metadata": {
                        "description": "Virtual Network Resource ID"
                      }
                    },
                    "activeActive": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Configures the Virtual Network Gateway as Active Active with two Public IP Addresses if True.  Default is False."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "variables": {
                    "ipConfiguration": "[if(parameters('activeActive'), createArray(createObject('name', 'vNetGatewayConfig1', 'properties', createObject('privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name')))))), createObject('properties', createObject('name', 'vNetGatewayConfig2', 'privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))))))), createArray(createObject('name', 'vNetGatewayConfig1', 'properties', createObject('privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))))))))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('activeActive')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworkGateways",
                      "apiVersion": "2023-02-01",
                      "name": "[parameters('virtualNetworkGateway_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "enablePrivateIpAddress": false,
                        "ipConfigurations": "[variables('ipConfiguration')]",
                        "natRules": [],
                        "virtualNetworkGatewayPolicyGroups": [],
                        "enableBgpRouteTranslationForNat": false,
                        "disableIPSecReplayProtection": false,
                        "sku": {
                          "name": "[parameters('virtualNetworkGateway_SKU')]",
                          "tier": "[parameters('virtualNetworkGateway_SKU')]"
                        },
                        "gatewayType": "Vpn",
                        "vpnType": "RouteBased",
                        "enableBgp": true,
                        "activeActive": "[parameters('activeActive')]",
                        "bgpSettings": {
                          "asn": "[parameters('virtualNetworkGateway_ASN')]",
                          "peerWeight": 0
                        },
                        "vpnGatewayGeneration": "[parameters('vpnGatewayGeneration')]",
                        "allowRemoteVnetTraffic": false,
                        "allowVirtualWanTraffic": false
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name')))]",
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "virtualNetworkGateway_ResourceID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name'))]"
                    },
                    "virtualNetworkGateway_Name": {
                      "type": "string",
                      "value": "[parameters('virtualNetworkGateway_Name')]"
                    },
                    "virtualNetworkGateway_BGPAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddress]"
                    },
                    "virtualNetworkGateway_ActiveActive_BGPAddress1": {
                      "type": "string",
                      "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddresses[0].defaultBgpIpAddresses[0], '')]"
                    },
                    "virtualNetworkGateway_ActiveActive_BGPAddress2": {
                      "type": "string",
                      "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddresses[1].defaultBgpIpAddresses[0], '')]"
                    },
                    "virtualNetworkGateway_ASN": {
                      "type": "int",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.asn]"
                    },
                    "virtualNetworkGateway_PublicIPAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))), '2022-11-01').ipAddress]"
                    },
                    "virtualNetworkGateway_ActiveActive_PublicIPAddress02": {
                      "type": "string",
                      "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))), '2022-11-01').ipAddress, '')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "virtualNetworkGateway2",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location_VirtualNetworkGateway2')]"
                  },
                  "virtualNetworkGateway_ASN": {
                    "value": "[parameters('asn_VirtualNetworkGateway2')]"
                  },
                  "virtualNetworkGateway_Name": {
                    "value": "[parameters('name_VirtualNetworkGateway2')]"
                  },
                  "virtualNetworkGateway_Subnet_ResourceID": {
                    "value": "[parameters('subnetId_VirtualNetworkGateway2')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "15330167770294849167"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter that the resources are deployed to"
                      }
                    },
                    "virtualNetworkGateway_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Azure Virtual Network Gateway"
                      }
                    },
                    "virtualNetworkGateway_SKU": {
                      "type": "string",
                      "defaultValue": "VpnGw1",
                      "allowedValues": [
                        "Basic",
                        "VpnGw1",
                        "VpnGw2",
                        "VpnGw3",
                        "VpnGw4",
                        "VpnGw5",
                        "VpnGw1AZ",
                        "VpnGw2AZ",
                        "VpnGw3AZ",
                        "VpnGw4AZ",
                        "VpnGw5AZ"
                      ],
                      "metadata": {
                        "description": "SKU of the Virtual Network Gateway"
                      }
                    },
                    "vpnGatewayGeneration": {
                      "type": "string",
                      "defaultValue": "Generation1",
                      "allowedValues": [
                        "Generation1",
                        "Generation2"
                      ],
                      "metadata": {
                        "description": "Generation of the Virtual Network Gateway SKU\nGeneration1: Basic, VpnGw1-3, VpnGw1-3AZ\nGeneration2: VpnGw2-5, VpnGw2-5Az"
                      }
                    },
                    "virtualNetworkGateway_ASN": {
                      "type": "int",
                      "metadata": {
                        "description": "Virtul Network Gateway ASN for BGP"
                      }
                    },
                    "virtualNetworkGateway_Subnet_ResourceID": {
                      "type": "string",
                      "metadata": {
                        "description": "Virtual Network Resource ID"
                      }
                    },
                    "activeActive": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Configures the Virtual Network Gateway as Active Active with two Public IP Addresses if True.  Default is False."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "variables": {
                    "ipConfiguration": "[if(parameters('activeActive'), createArray(createObject('name', 'vNetGatewayConfig1', 'properties', createObject('privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name')))))), createObject('properties', createObject('name', 'vNetGatewayConfig2', 'privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))))))), createArray(createObject('name', 'vNetGatewayConfig1', 'properties', createObject('privateIPAllocationMethod', 'Dynamic', 'subnet', createObject('id', parameters('virtualNetworkGateway_Subnet_ResourceID')), 'publicIPAddress', createObject('id', resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))))))))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('activeActive')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworkGateways",
                      "apiVersion": "2023-02-01",
                      "name": "[parameters('virtualNetworkGateway_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "enablePrivateIpAddress": false,
                        "ipConfigurations": "[variables('ipConfiguration')]",
                        "natRules": [],
                        "virtualNetworkGatewayPolicyGroups": [],
                        "enableBgpRouteTranslationForNat": false,
                        "disableIPSecReplayProtection": false,
                        "sku": {
                          "name": "[parameters('virtualNetworkGateway_SKU')]",
                          "tier": "[parameters('virtualNetworkGateway_SKU')]"
                        },
                        "gatewayType": "Vpn",
                        "vpnType": "RouteBased",
                        "enableBgp": true,
                        "activeActive": "[parameters('activeActive')]",
                        "bgpSettings": {
                          "asn": "[parameters('virtualNetworkGateway_ASN')]",
                          "peerWeight": 0
                        },
                        "vpnGatewayGeneration": "[parameters('vpnGatewayGeneration')]",
                        "allowRemoteVnetTraffic": false,
                        "allowVirtualWanTraffic": false
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name')))]",
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name')))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "virtualNetworkGateway_ResourceID": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name'))]"
                    },
                    "virtualNetworkGateway_Name": {
                      "type": "string",
                      "value": "[parameters('virtualNetworkGateway_Name')]"
                    },
                    "virtualNetworkGateway_BGPAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddress]"
                    },
                    "virtualNetworkGateway_ActiveActive_BGPAddress1": {
                      "type": "string",
                      "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddresses[0].defaultBgpIpAddresses[0], '')]"
                    },
                    "virtualNetworkGateway_ActiveActive_BGPAddress2": {
                      "type": "string",
                      "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.bgpPeeringAddresses[1].defaultBgpIpAddresses[0], '')]"
                    },
                    "virtualNetworkGateway_ASN": {
                      "type": "int",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', parameters('virtualNetworkGateway_Name')), '2023-02-01').bgpSettings.asn]"
                    },
                    "virtualNetworkGateway_PublicIPAddress": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_01', parameters('virtualNetworkGateway_Name'))), '2022-11-01').ipAddress]"
                    },
                    "virtualNetworkGateway_ActiveActive_PublicIPAddress02": {
                      "type": "string",
                      "value": "[if(parameters('activeActive'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP_02', parameters('virtualNetworkGateway_Name'))), '2022-11-01').ipAddress, '')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "virtualNetworkGateway1_to_virtualNetworkGateway2_conn",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location_VirtualNetworkGateway1')]"
                  },
                  "virtualNetworkGateway_ID": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetworkGateway1'), '2022-09-01').outputs.virtualNetworkGateway_ResourceID.value]"
                  },
                  "vpn_Destination_ASN": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetworkGateway2'), '2022-09-01').outputs.virtualNetworkGateway_ASN.value]"
                  },
                  "vpn_Destination_BGPIPAddress": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetworkGateway2'), '2022-09-01').outputs.virtualNetworkGateway_BGPAddress.value]"
                  },
                  "vpn_Destination_Name": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetworkGateway2'), '2022-09-01').outputs.virtualNetworkGateway_Name.value]"
                  },
                  "vpn_Destination_PublicIPAddress": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetworkGateway2'), '2022-09-01').outputs.virtualNetworkGateway_PublicIPAddress.value]"
                  },
                  "vpn_SharedKey": {
                    "value": "[parameters('vpn_SharedKey')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "11860563558121779052"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter that the source VNG is deployed"
                      }
                    },
                    "vpn_Destination_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Friendly name for the destination VPN device"
                      }
                    },
                    "vpn_Destination_PublicIPAddress": {
                      "type": "string",
                      "metadata": {
                        "description": "Public IP Address of the Destination VPN.  Use this or FQDN.  Not both."
                      }
                    },
                    "vpn_Destination_FQDN": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "FQDN of the Destination VPN.  Use this or Public IP Address.  Not both."
                      }
                    },
                    "vpn_Destination_BGPIPAddress": {
                      "type": "string",
                      "metadata": {
                        "description": "BGP Peering Address of the Destination VPN"
                      }
                    },
                    "vpn_Destination_ASN": {
                      "type": "int",
                      "metadata": {
                        "description": "ASN of the Destination VPN"
                      }
                    },
                    "vpn_SharedKey": {
                      "type": "securestring",
                      "metadata": {
                        "description": "VPN Shared Key used for authenticating VPN connections"
                      }
                    },
                    "lngOptionalTag": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Option to add an additional identifier in case two LNGs of the same name might get created."
                      }
                    },
                    "virtualNetworkGateway_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "Source Virtual Network Gateway ID"
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "variables": {
                    "virtualNetworkGateway_ID_Split": "[split(parameters('virtualNetworkGateway_ID'), '/')]",
                    "virtualNetworkGateway_Name": "[variables('virtualNetworkGateway_ID_Split')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/connections",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}_to_{1}_Connection', variables('virtualNetworkGateway_Name'), parameters('vpn_Destination_Name'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "virtualNetworkGateway1": {
                          "id": "[parameters('virtualNetworkGateway_ID')]",
                          "properties": {}
                        },
                        "localNetworkGateway2": {
                          "id": "[resourceId('Microsoft.Network/localNetworkGateways', format('{0}_LocalNetworkGateway{1}', parameters('vpn_Destination_Name'), parameters('lngOptionalTag')))]",
                          "properties": {}
                        },
                        "connectionType": "IPsec",
                        "connectionProtocol": "IKEv2",
                        "routingWeight": 0,
                        "sharedKey": "[parameters('vpn_SharedKey')]",
                        "enableBgp": true,
                        "useLocalAzureIpAddress": false,
                        "usePolicyBasedTrafficSelectors": false,
                        "dpdTimeoutSeconds": 45,
                        "connectionMode": "Default"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/localNetworkGateways', format('{0}_LocalNetworkGateway{1}', parameters('vpn_Destination_Name'), parameters('lngOptionalTag')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/localNetworkGateways",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}_LocalNetworkGateway{1}', parameters('vpn_Destination_Name'), parameters('lngOptionalTag'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "gatewayIpAddress": "[parameters('vpn_Destination_PublicIPAddress')]",
                        "fqdn": "[parameters('vpn_Destination_FQDN')]",
                        "bgpSettings": {
                          "asn": "[parameters('vpn_Destination_ASN')]",
                          "bgpPeeringAddress": "[parameters('vpn_Destination_BGPIPAddress')]"
                        }
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'virtualNetworkGateway1')]",
                "[resourceId('Microsoft.Resources/deployments', 'virtualNetworkGateway2')]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "virtualNetworkGateway2_to_virtualNetworkGateway1_conn",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location_VirtualNetworkGateway2')]"
                  },
                  "virtualNetworkGateway_ID": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetworkGateway2'), '2022-09-01').outputs.virtualNetworkGateway_ResourceID.value]"
                  },
                  "vpn_Destination_ASN": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetworkGateway1'), '2022-09-01').outputs.virtualNetworkGateway_ASN.value]"
                  },
                  "vpn_Destination_BGPIPAddress": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetworkGateway1'), '2022-09-01').outputs.virtualNetworkGateway_BGPAddress.value]"
                  },
                  "vpn_Destination_Name": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetworkGateway1'), '2022-09-01').outputs.virtualNetworkGateway_Name.value]"
                  },
                  "vpn_Destination_PublicIPAddress": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetworkGateway1'), '2022-09-01').outputs.virtualNetworkGateway_PublicIPAddress.value]"
                  },
                  "vpn_SharedKey": {
                    "value": "[parameters('vpn_SharedKey')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "11860563558121779052"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter that the source VNG is deployed"
                      }
                    },
                    "vpn_Destination_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Friendly name for the destination VPN device"
                      }
                    },
                    "vpn_Destination_PublicIPAddress": {
                      "type": "string",
                      "metadata": {
                        "description": "Public IP Address of the Destination VPN.  Use this or FQDN.  Not both."
                      }
                    },
                    "vpn_Destination_FQDN": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "FQDN of the Destination VPN.  Use this or Public IP Address.  Not both."
                      }
                    },
                    "vpn_Destination_BGPIPAddress": {
                      "type": "string",
                      "metadata": {
                        "description": "BGP Peering Address of the Destination VPN"
                      }
                    },
                    "vpn_Destination_ASN": {
                      "type": "int",
                      "metadata": {
                        "description": "ASN of the Destination VPN"
                      }
                    },
                    "vpn_SharedKey": {
                      "type": "securestring",
                      "metadata": {
                        "description": "VPN Shared Key used for authenticating VPN connections"
                      }
                    },
                    "lngOptionalTag": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Option to add an additional identifier in case two LNGs of the same name might get created."
                      }
                    },
                    "virtualNetworkGateway_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "Source Virtual Network Gateway ID"
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "variables": {
                    "virtualNetworkGateway_ID_Split": "[split(parameters('virtualNetworkGateway_ID'), '/')]",
                    "virtualNetworkGateway_Name": "[variables('virtualNetworkGateway_ID_Split')[8]]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/connections",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}_to_{1}_Connection', variables('virtualNetworkGateway_Name'), parameters('vpn_Destination_Name'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "virtualNetworkGateway1": {
                          "id": "[parameters('virtualNetworkGateway_ID')]",
                          "properties": {}
                        },
                        "localNetworkGateway2": {
                          "id": "[resourceId('Microsoft.Network/localNetworkGateways', format('{0}_LocalNetworkGateway{1}', parameters('vpn_Destination_Name'), parameters('lngOptionalTag')))]",
                          "properties": {}
                        },
                        "connectionType": "IPsec",
                        "connectionProtocol": "IKEv2",
                        "routingWeight": 0,
                        "sharedKey": "[parameters('vpn_SharedKey')]",
                        "enableBgp": true,
                        "useLocalAzureIpAddress": false,
                        "usePolicyBasedTrafficSelectors": false,
                        "dpdTimeoutSeconds": 45,
                        "connectionMode": "Default"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/localNetworkGateways', format('{0}_LocalNetworkGateway{1}', parameters('vpn_Destination_Name'), parameters('lngOptionalTag')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/localNetworkGateways",
                      "apiVersion": "2022-11-01",
                      "name": "[format('{0}_LocalNetworkGateway{1}', parameters('vpn_Destination_Name'), parameters('lngOptionalTag'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "gatewayIpAddress": "[parameters('vpn_Destination_PublicIPAddress')]",
                        "fqdn": "[parameters('vpn_Destination_FQDN')]",
                        "bgpSettings": {
                          "asn": "[parameters('vpn_Destination_ASN')]",
                          "bgpPeeringAddress": "[parameters('vpn_Destination_BGPIPAddress')]"
                        }
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'virtualNetworkGateway1')]",
                "[resourceId('Microsoft.Resources/deployments', 'virtualNetworkGateway2')]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'hub_VNet')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'onprem_VNet')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "peerings_Hub_to_Spokes",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_Hub_Id": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks', 'hub_VNet')]"
          },
          "virtualNetwork_Spoke_Ids": {
            "value": [
              "[resourceId('Microsoft.Network/virtualNetworks', 'spokeA_VNet')]",
              "[resourceId('Microsoft.Network/virtualNetworks', 'spokeB_VNet')]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "9506160143020222285"
            }
          },
          "parameters": {
            "virtualNetwork_Hub_Id": {
              "type": "string",
              "metadata": {
                "description": "Resource Id of the Hub Virtual Network"
              }
            },
            "virtualNetwork_Spoke_Ids": {
              "type": "array",
              "metadata": {
                "description": "Array of Resource Ids of the Spoke Virtual Networks"
              }
            }
          },
          "resources": [
            {
              "copy": {
                "name": "virtualNetworkPeering_Hub_to_Spoke",
                "count": "[length(parameters('virtualNetwork_Spoke_Ids'))]"
              },
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2024-05-01",
              "name": "[format('{0}/to{1}', split(parameters('virtualNetwork_Hub_Id'), '/')[8], split(parameters('virtualNetwork_Spoke_Ids')[copyIndex()], '/')[8])]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[parameters('virtualNetwork_Spoke_Ids')[copyIndex()]]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "useRemoteGateways": false,
                "allowGatewayTransit": true
              }
            },
            {
              "copy": {
                "name": "virtualNetworkPeering_Spokes_to_Hub",
                "count": "[length(parameters('virtualNetwork_Spoke_Ids'))]"
              },
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2024-05-01",
              "name": "[format('{0}/to{1}', split(parameters('virtualNetwork_Spoke_Ids')[copyIndex()], '/')[8], split(parameters('virtualNetwork_Hub_Id'), '/')[8])]",
              "properties": {
                "remoteVirtualNetwork": {
                  "id": "[parameters('virtualNetwork_Hub_Id')]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "useRemoteGateways": true,
                "allowGatewayTransit": false,
                "doNotVerifyRemoteGateways": true
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'onprem_to_Hub_VirtualNetworkGateways_and_Connections')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'hub_VNet')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'spokeA_VNet')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'spokeB_VNet')]"
      ]
    }
  ]
}
