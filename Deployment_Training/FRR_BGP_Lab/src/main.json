{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "17196421568174058477"
    }
  },
  "parameters": {
    "virtualMachine_AdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the admin account of the Virtual Machines"
      }
    },
    "virtualMachine_AdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the admin account of the Virtual Machines"
      }
    },
    "virtualMachine_Size": {
      "type": "string",
      "defaultValue": "Standard_B2ms",
      "metadata": {
        "description": "Size of the Virtual Machines"
      }
    },
    "acceleratedNetworking": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "True enables Accelerated Networking and False disabled it.  \nNot all VM sizes support Accel Net (i.e. Standard_B2ms).  \nI'd recommend Standard_D2s_v3 for a cheap VM that supports Accel Net.\n"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "tagValues": {
      "Training": "BGPLab"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2022-09-01",
      "name": "virtualNetwork",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.100.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "AzureBastionSubnet",
            "properties": {
              "addressPrefix": "10.100.0.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "Subnet01",
            "properties": {
              "addressPrefix": "10.100.1.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'genericNSG')]"
              }
            }
          },
          {
            "name": "Subnet02",
            "properties": {
              "addressPrefix": "10.100.2.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'genericNSG')]"
              }
            }
          },
          {
            "name": "Subnet03",
            "properties": {
              "addressPrefix": "10.100.3.0/24",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'genericNSG')]"
              }
            }
          },
          {
            "name": "Subnet04",
            "properties": {
              "addressPrefix": "10.100.4.0/24",
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'genericNSG')]"
              }
            }
          }
        ],
        "enableDdosProtection": false
      },
      "tags": "[variables('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'genericNSG')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2024-05-01",
      "name": "genericNSG",
      "location": "[variables('location')]"
    },
    {
      "copy": {
        "name": "virtualMachine_Linux",
        "count": "[length(range(1, 4))]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2023-03-01",
      "name": "[format('VM0{0}', range(1, 4)[copyIndex()])]",
      "location": "[variables('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachine_Size')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "canonical",
            "offer": "ubuntu-24_04-lts",
            "sku": "server",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[format('VM0{0}_OsDisk_1', range(1, 4)[copyIndex()])]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "deleteOption": "Delete"
          },
          "dataDisks": []
        },
        "osProfile": {
          "computerName": "[format('VM0{0}', range(1, 4)[copyIndex()])]",
          "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
          "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": false,
            "provisionVMAgent": true,
            "patchSettings": {
              "patchMode": "ImageDefault",
              "assessmentMode": "ImageDefault"
            }
          },
          "secrets": [],
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[reference(resourceId('Microsoft.Resources/deployments', format('VM0{0}_networkInterface', range(1, 4)[sub(range(1, 4)[copyIndex()], 1)])), '2022-09-01').outputs.networkInterface_ID.value]",
              "properties": {
                "deleteOption": "Delete"
              }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "tags": "[variables('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', format('VM0{0}_networkInterface', range(1, 4)[sub(range(1, 4)[copyIndex()], 1)]))]"
      ]
    },
    {
      "copy": {
        "name": "vm_CustomScriptExtension",
        "count": "[length(range(1, 4))]"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2021-11-01",
      "name": "[format('{0}/{1}', format('VM0{0}', range(1, 4)[sub(range(1, 4)[copyIndex()], 1)]), 'installcustomscript')]",
      "location": "[variables('location')]",
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.1",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "https://raw.githubusercontent.com/jimgodden/Azure_Networking_Labs/main/scripts/FRR_BGP_Training_Configuration.sh"
          ]
        },
        "protectedSettings": {
          "commandToExecute": "./FRR_BGP_Training_Configuration.sh"
        }
      },
      "tags": "[variables('tagValues')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', format('VM0{0}', range(1, 4)[sub(range(1, 4)[copyIndex()], 1)]))]"
      ]
    },
    {
      "copy": {
        "name": "networkInterface",
        "count": "[length(range(1, 4))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('VM0{0}_networkInterface', range(1, 4)[copyIndex()])]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "networkInterface_Name": {
            "value": "[format('VM0{0}_networkInterface', range(1, 4)[copyIndex()])]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'virtualNetwork'), '2022-09-01').subnets[range(1, 4)[copyIndex()]].id]"
          },
          "privateIPAddress": {
            "value": "[format('10.100.{0}.{1}0', range(1, 4)[copyIndex()], range(1, 4)[copyIndex()])]"
          },
          "privateIPAllocationMethod": {
            "value": "Static"
          },
          "tagValues": {
            "value": "[variables('tagValues')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "11358289721704706086"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
              }
            },
            "privateIPAllocationMethod": {
              "type": "string",
              "defaultValue": "Dynamic",
              "allowedValues": [
                "Dynamic",
                "Static"
              ],
              "metadata": {
                "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
              }
            },
            "privateIPAddress": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "addPublicIPAddress": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Adds a Public IP to the Network Interface of the Virtual Machine if true."
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "condition": "[not(parameters('addPublicIPAddress'))]",
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig0",
                    "properties": {
                      "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                      "subnet": {
                        "id": "[parameters('subnet_ID')]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4",
                      "privateIPAddress": "[parameters('privateIPAddress')]"
                    }
                  }
                ],
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "enableIPForwarding": true,
                "disableTcpStateTracking": false,
                "nicType": "Standard"
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "condition": "[parameters('addPublicIPAddress')]",
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig0",
                    "properties": {
                      "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                      "subnet": {
                        "id": "[parameters('subnet_ID')]"
                      },
                      "primary": true,
                      "privateIPAddressVersion": "IPv4",
                      "privateIPAddress": "[parameters('privateIPAddress')]",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                      }
                    }
                  }
                ],
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "nicType": "Standard"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
              ]
            },
            {
              "condition": "[parameters('addPublicIPAddress')]",
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2023-06-01",
              "name": "[format('{0}_PIP', parameters('networkInterface_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            }
          ],
          "outputs": {
            "networkInterface_Name": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), parameters('networkInterface_Name'), parameters('networkInterface_Name'))]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')))]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name)]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id)]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress)]"
            },
            "networkInterface_PublicIPAddress": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name'))), '2023-06-01').ipAddress, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'virtualNetwork')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "bastion",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "bastion_name": {
            "value": "Bastion"
          },
          "bastion_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'virtualNetwork'), '2022-09-01').subnets[0].id]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "bastion_SKU": {
            "value": "Basic"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "8940753681302617038"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter location that the main resouces will be deployed to."
              }
            },
            "bastion_name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Bastion"
              }
            },
            "bastion_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the subnet the Azure Bastion will be placed in.  The name of the subnet must be \"AzureBastionSubnet\""
              }
            },
            "enableTunneling": {
              "type": "bool",
              "defaultValue": false
            },
            "enableIpConnect": {
              "type": "bool",
              "defaultValue": false
            },
            "disableCopyPaste": {
              "type": "bool",
              "defaultValue": false
            },
            "enableShareableLink": {
              "type": "bool",
              "defaultValue": false
            },
            "enableFileCopy": {
              "type": "bool",
              "defaultValue": false
            },
            "enableKerberos": {
              "type": "bool",
              "defaultValue": false
            },
            "enablePrivateOnlyBastion": {
              "type": "bool",
              "defaultValue": false
            },
            "bastion_SKU": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "SKU of the Azure Bastion"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2024-05-01",
              "name": "[parameters('bastion_name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('bastion_SKU')]"
              },
              "properties": {
                "scaleUnits": 2,
                "enableTunneling": "[parameters('enableTunneling')]",
                "enableIpConnect": "[parameters('enableIpConnect')]",
                "disableCopyPaste": "[parameters('disableCopyPaste')]",
                "enableShareableLink": "[parameters('enableShareableLink')]",
                "enableFileCopy": "[parameters('enableFileCopy')]",
                "enableKerberos": "[parameters('enableKerberos')]",
                "enablePrivateOnlyBastion": "[parameters('enablePrivateOnlyBastion')]",
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('bastion_name')))]"
                      },
                      "subnet": {
                        "id": "[parameters('bastion_SubnetID')]"
                      }
                    }
                  }
                ]
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('bastion_name')))]"
              ]
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}_VIP', parameters('bastion_name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', 'virtualNetwork')]"
      ]
    }
  ]
}
