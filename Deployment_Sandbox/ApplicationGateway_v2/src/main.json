{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.32.4.45862",
      "templateHash": "4805653186098044911"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "site_Name": {
      "type": "string",
      "defaultValue": "[format('anptestsite{0}', substring(uniqueString(resourceGroup().id), 0, 5))]",
      "metadata": {
        "description": "Name of the App Service"
      }
    },
    "virtualMachine_AdminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the admin account of the Virtual Machines"
      }
    },
    "virtualMachine_AdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the admin account of the Virtual Machines"
      }
    },
    "virtualMachine_Size": {
      "type": "string",
      "defaultValue": "Standard_D2as_v4",
      "metadata": {
        "description": "Password for the Virtual Machine Admin User"
      }
    },
    "acceleratedNetworking": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "True enables Accelerated Networking and False disabled it.  \nNot all VM sizes support Accel Net (i.e. Standard_B2ms).  \nI'd recommend Standard_D2s_v3 for a cheap VM that supports Accel Net.\n"
      }
    },
    "isUsingAzureFirewall": {
      "type": "bool",
      "defaultValue": false
    },
    "azureFirewall_SKU": {
      "type": "string",
      "defaultValue": "Standard"
    }
  },
  "variables": {
    "virtualMachine_ScriptFileLocation": "https://raw.githubusercontent.com/jimgodden/Azure_Networking_Labs/main/scripts/",
    "virtualMachine_Website_DomainName": "contoso.com"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "VirtualNetworkHub",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualNetwork_AddressPrefix": {
            "value": "10.0.0.0/16"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "virtualNetwork_Name": {
            "value": "VirutalNetworkHub"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "13797875414295410429"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter that the resource is deployed to"
              }
            },
            "virtualNetwork_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Network"
              }
            },
            "dnsServers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "An Array of Custom DNS Server IP Addresses.  Azure Wireserver will be used if left as an empty array [].\nExample:\n[10.0.0.4, 10.0.0.5]\n"
              }
            },
            "networkSecurityGroup_Default_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NSG_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Network Security Group"
              }
            },
            "routeTable_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_RT_General', parameters('virtualNetwork_Name'))]",
              "metadata": {
                "description": "Name of the General Route Table"
              }
            },
            "routeTable_disableBgpRoutePropagation": {
              "type": "bool",
              "defaultValue": false
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string"
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "copy": [
              {
                "name": "subnet_AddressRangeCIDRs",
                "count": "[length(range(0, 255))]",
                "input": "[cidrSubnet(parameters('virtualNetwork_AddressPrefix'), 24, range(0, 255)[copyIndex('subnet_AddressRangeCIDRs')])]"
              }
            ],
            "subnet_Names": [
              "General",
              "PrivateEndpoints",
              "PrivateLinkService",
              "ApplicationGatewaySubnet",
              "AppServiceSubnet",
              "GatewaySubnet",
              "AzureFirewallSubnet",
              "AzureFirewallManagementSubnet",
              "AzureBastionSubnet",
              "PrivateResolver_Inbound",
              "PrivateResolver_Outbound"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-09-01",
              "name": "[parameters('virtualNetwork_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "dhcpOptions": {
                  "dnsServers": "[parameters('dnsServers')]"
                },
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('virtualNetwork_AddressPrefix')]"
                  ]
                },
                "subnets": [
                  {
                    "name": "[variables('subnet_Names')[0]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[0]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[1]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[1]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[2]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[2]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Disabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[3]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[3]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[4]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[4]]",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
                      },
                      "delegations": [
                        {
                          "name": "delegation",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                          },
                          "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                        }
                      ],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[5]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[5]]",
                      "routeTable": {
                        "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
                      },
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[6]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[6]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[7]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[7]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[8]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[8]]",
                      "delegations": [],
                      "privateEndpointNetworkPolicies": "Disabled",
                      "privateLinkServiceNetworkPolicies": "Enabled"
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[9]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[9]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "[variables('subnet_Names')[10]]",
                    "properties": {
                      "addressPrefix": "[variables('subnet_AddressRangeCIDRs')[10]]",
                      "delegations": [
                        {
                          "name": "Microsoft.Network.dnsResolvers",
                          "properties": {
                            "serviceName": "Microsoft.Network/dnsResolvers"
                          }
                        }
                      ]
                    }
                  }
                ],
                "enableDdosProtection": false
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name')))]",
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2023-02-01",
              "name": "[parameters('routeTable_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "disableBgpRoutePropagation": "[parameters('routeTable_disableBgpRoutePropagation')]"
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkSecurityGroup_Default_Name')]",
              "location": "[parameters('location')]",
              "properties": {},
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_NSG_ApplicationGateway', parameters('virtualNetwork_Name'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "AllowGatewayManager",
                    "properties": {
                      "description": "Allow GatewayManager",
                      "protocol": "*",
                      "sourcePortRange": "*",
                      "destinationPortRange": "65200-65535",
                      "sourceAddressPrefix": "GatewayManager",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1000,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  },
                  {
                    "name": "AllowHTTPS",
                    "properties": {
                      "description": "Allow HTTPS",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "*",
                      "destinationAddressPrefix": "*",
                      "access": "Allow",
                      "priority": 1001,
                      "direction": "Inbound",
                      "sourcePortRanges": [],
                      "destinationPortRanges": [],
                      "sourceAddressPrefixes": [],
                      "destinationAddressPrefixes": []
                    }
                  }
                ]
              },
              "tags": "[parameters('tagValues')]"
            }
          ],
          "outputs": {
            "general_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].id]"
            },
            "privateEndpoint_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].id]"
            },
            "privateLinkService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].id]"
            },
            "applicationGateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].id]"
            },
            "appService_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].id]"
            },
            "gateway_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].id]"
            },
            "azureFirewall_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].id]"
            },
            "azureFirewallManagement_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].id]"
            },
            "bastion_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].id]"
            },
            "privateResolver_Inbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].id]"
            },
            "privateResolver_Outbound_SubnetID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].id]"
            },
            "general_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[0].properties.addressPrefix]"
            },
            "privateEndpoint_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[1].properties.addressPrefix]"
            },
            "privateLinkService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[2].properties.addressPrefix]"
            },
            "applicationGateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[3].properties.addressPrefix]"
            },
            "appService_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[4].properties.addressPrefix]"
            },
            "gateway_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[5].properties.addressPrefix]"
            },
            "azureFirewall_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[6].properties.addressPrefix]"
            },
            "azureFirewallManagement_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[7].properties.addressPrefix]"
            },
            "bastion_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[8].properties.addressPrefix]"
            },
            "privateResolver_Inbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[9].properties.addressPrefix]"
            },
            "privateResolver_Outbound_Subnet_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').subnets[10].properties.addressPrefix]"
            },
            "virtualNetwork_Name": {
              "type": "string",
              "value": "[parameters('virtualNetwork_Name')]"
            },
            "virtualNetwork_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name'))]"
            },
            "virtualNetwork_AddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetwork_Name')), '2022-09-01').addressSpace.addressPrefixes[0]]"
            },
            "routeTable_Name": {
              "type": "string",
              "value": "[parameters('routeTable_Name')]"
            },
            "routeTable_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/routeTables', parameters('routeTable_Name'))]"
            },
            "networkSecurityGroup_Name": {
              "type": "string",
              "value": "[parameters('networkSecurityGroup_Default_Name')]"
            },
            "networkSecurityGroup_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup_Default_Name'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "clientVM",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "networkInterface_Name": {
            "value": "clientVM_NetworkInterface"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "clientVM"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "https://raw.githubusercontent.com/jimgodden/Azure_Networking_Labs/main/scripts/"
          },
          "virtualMachine_ScriptFileName": {
            "value": "WinServ2022_ConfigScript_General.ps1"
          },
          "commandToExecute": {
            "value": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2022_ConfigScript_General.ps1 -Username {0}', parameters('virtualMachine_AdminUsername'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "427334920654472171"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "maxLength": 15,
              "metadata": {
                "description": "Name of the Virtual Machine"
              }
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\nExamples:\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\nExample: WinServ2022_ConfigScript_General.ps1"
              }
            },
            "commandToExecute": {
              "type": "string",
              "metadata": {
                "description": "'Command to execute while the Virtual Machine is being created.\nExample:\n'powershell.exe -ExecutionPolicy Unrestricted -File <file name.ps1>'\n"
              }
            },
            "addPublicIPAddress": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Adds a Public IP to the Network Interface of the Virtual Machine"
              }
            },
            "privateIPAllocationMethod": {
              "type": "string",
              "defaultValue": "Dynamic",
              "allowedValues": [
                "Dynamic",
                "Static"
              ],
              "metadata": {
                "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
              }
            },
            "privateIPAddress": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  },
                  "addPublicIPAddress": {
                    "value": "[parameters('addPublicIPAddress')]"
                  },
                  "privateIPAllocationMethod": {
                    "value": "[parameters('privateIPAllocationMethod')]"
                  },
                  "privateIPAddress": {
                    "value": "[parameters('privateIPAddress')]"
                  },
                  "tagValues": {
                    "value": "[parameters('tagValues')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "11358289721704706086"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter that the resource is deployed to"
                      }
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "privateIPAllocationMethod": {
                      "type": "string",
                      "defaultValue": "Dynamic",
                      "allowedValues": [
                        "Dynamic",
                        "Static"
                      ],
                      "metadata": {
                        "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                      }
                    },
                    "privateIPAddress": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    },
                    "addPublicIPAddress": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Adds a Public IP to the Network Interface of the Virtual Machine if true."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('addPublicIPAddress'))]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": true,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                              }
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}_PIP', parameters('networkInterface_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), parameters('networkInterface_Name'), parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name)]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id)]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress)]"
                    },
                    "networkInterface_PublicIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name'))), '2023-06-01').ipAddress, '')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "virtualMachine_Name": {
              "type": "string",
              "value": "[parameters('virtualMachine_Name')]"
            },
            "virtualMachine_Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
            },
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            },
            "networkInterface_PublicIPAddress": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PublicIPAddress.value, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "AppGW",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationGateway_Name": {
            "value": "AppGWv2"
          },
          "applicationGateway_PrivateIPAddress": {
            "value": "[parseCidr(reference(resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub'), '2022-09-01').outputs.applicationGateway_Subnet_AddressPrefix.value).lastUsable]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "applicationGateway_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub'), '2022-09-01').outputs.applicationGateway_SubnetID.value]"
          },
          "backendPoolFQDNs": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'site'), '2022-09-01').outputs.website_FQDN.value]",
              "[format('{0}.{1}', reference(resourceId('Microsoft.Resources/deployments', 'webServVM_Win'), '2022-09-01').outputs.virtualMachine_Name.value, variables('virtualMachine_Website_DomainName'))]",
              "[format('{0}.{1}', reference(resourceId('Microsoft.Resources/deployments', 'webServVM_Ubn'), '2022-09-01').outputs.virtualMachine_Name.value, variables('virtualMachine_Website_DomainName'))]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "8677099807178986764"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Region that the resources are deployed to"
              }
            },
            "applicationGateway_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Application Gateway"
              }
            },
            "publicIP_ApplicationGateway_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_PIP', parameters('applicationGateway_Name'))]",
              "metadata": {
                "description": "Name of the Public IP Address resource of the Applciation Gateway"
              }
            },
            "applicationGateway_PrivateIPAddress": {
              "type": "string",
              "metadata": {
                "description": "Name of the Private IP Address of the Frontend of the Applciation Gateway"
              }
            },
            "applicationGateway_SubnetID": {
              "type": "string"
            },
            "applicationGatewayWAF_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_WAF', parameters('applicationGateway_Name'))]",
              "metadata": {
                "description": "Name of the Web Application Firewall of the Application Gateway"
              }
            },
            "backendPoolFQDNs": {
              "type": "array",
              "metadata": {
                "description": "FQDN of the website in the backend pool of the Application Gateway"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "frontendID": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', parameters('applicationGateway_Name'), 'fip_private')]",
            "frontendPortID": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', parameters('applicationGateway_Name'), 'port_80')]",
            "httpListenerID": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', parameters('applicationGateway_Name'), 'http_listener')]",
            "backendAddressPoolID": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', parameters('applicationGateway_Name'), 'bep')]",
            "backendHTTPSettingsID": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', parameters('applicationGateway_Name'), 'http-to-asp-settings')]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
              "apiVersion": "2022-11-01",
              "name": "[parameters('applicationGatewayWAF_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "customRules": [],
                "policySettings": {
                  "requestBodyCheck": true,
                  "maxRequestBodySizeInKb": 128,
                  "fileUploadLimitInMb": 100,
                  "state": "Enabled",
                  "mode": "Detection",
                  "requestBodyInspectLimitInKB": 128,
                  "fileUploadEnforcement": true,
                  "requestBodyEnforcement": true
                },
                "managedRules": {
                  "managedRuleSets": [
                    {
                      "ruleSetType": "OWASP",
                      "ruleSetVersion": "3.2",
                      "ruleGroupOverrides": []
                    },
                    {
                      "ruleSetType": "Microsoft_BotManagerRuleSet",
                      "ruleSetVersion": "0.1",
                      "ruleGroupOverrides": []
                    }
                  ],
                  "exclusions": []
                }
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-11-01",
              "name": "[parameters('publicIP_ApplicationGateway_Name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/applicationGateways",
              "apiVersion": "2022-11-01",
              "name": "[parameters('applicationGateway_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "WAF_v2",
                  "tier": "WAF_v2"
                },
                "gatewayIPConfigurations": [
                  {
                    "name": "appGatewayIpConfig",
                    "properties": {
                      "subnet": {
                        "id": "[parameters('applicationGateway_SubnetID')]"
                      }
                    }
                  }
                ],
                "sslCertificates": [],
                "trustedRootCertificates": [],
                "trustedClientCertificates": [],
                "sslProfiles": [],
                "frontendIPConfigurations": [
                  {
                    "name": "fip_pub",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIP_ApplicationGateway_Name'))]"
                      }
                    }
                  },
                  {
                    "name": "fip_private",
                    "properties": {
                      "privateIPAddress": "[parameters('applicationGateway_PrivateIPAddress')]",
                      "privateIPAllocationMethod": "Static",
                      "subnet": {
                        "id": "[parameters('applicationGateway_SubnetID')]"
                      }
                    }
                  }
                ],
                "frontendPorts": [
                  {
                    "name": "port_80",
                    "properties": {
                      "port": 80
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "bep",
                    "properties": {
                      "copy": [
                        {
                          "name": "backendAddresses",
                          "count": "[length(parameters('backendPoolFQDNs'))]",
                          "input": {
                            "fqdn": "[parameters('backendPoolFQDNs')[copyIndex('backendAddresses')]]"
                          }
                        }
                      ]
                    }
                  }
                ],
                "loadDistributionPolicies": [],
                "backendHttpSettingsCollection": [
                  {
                    "name": "http-to-asp-settings",
                    "properties": {
                      "port": 80,
                      "protocol": "Http",
                      "cookieBasedAffinity": "Disabled",
                      "pickHostNameFromBackendAddress": true,
                      "requestTimeout": 20
                    }
                  }
                ],
                "httpListeners": [
                  {
                    "name": "http_listener",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "[variables('frontendID')]"
                      },
                      "frontendPort": {
                        "id": "[variables('frontendPortID')]"
                      },
                      "protocol": "Http",
                      "hostNames": [],
                      "requireServerNameIndication": false
                    }
                  }
                ],
                "listeners": [],
                "urlPathMaps": [],
                "requestRoutingRules": [
                  {
                    "name": "http-to-asp",
                    "properties": {
                      "ruleType": "Basic",
                      "priority": 100,
                      "httpListener": {
                        "id": "[variables('httpListenerID')]"
                      },
                      "backendAddressPool": {
                        "id": "[variables('backendAddressPoolID')]"
                      },
                      "backendHttpSettings": {
                        "id": "[variables('backendHTTPSettingsID')]"
                      }
                    }
                  }
                ],
                "routingRules": [],
                "probes": [],
                "rewriteRuleSets": [],
                "redirectConfigurations": [],
                "privateLinkConfigurations": [],
                "enableHttp2": true,
                "autoscaleConfiguration": {
                  "minCapacity": 0,
                  "maxCapacity": 2
                },
                "firewallPolicy": {
                  "id": "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', parameters('applicationGatewayWAF_Name'))]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies', parameters('applicationGatewayWAF_Name'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIP_ApplicationGateway_Name'))]"
              ]
            }
          ],
          "outputs": {
            "ApplicationGateway_FrontendIP_Private": {
              "type": "string",
              "value": "[parameters('applicationGateway_PrivateIPAddress')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'site')]",
        "[resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub')]",
        "[resourceId('Microsoft.Resources/deployments', 'webServVM_Ubn')]",
        "[resourceId('Microsoft.Resources/deployments', 'webServVM_Win')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "site",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "appServicePlan_Name": {
            "value": "asp"
          },
          "appServiceSubnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub'), '2022-09-01').outputs.appService_SubnetID.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "site_Name": {
            "value": "[parameters('site_Name')]"
          },
          "virtualNetwork_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub'), '2022-09-01').outputs.virtualNetwork_Name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "1181212863420922201"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Region that the resources are deployed to"
              }
            },
            "appServicePlan_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the App Service Plan"
              }
            },
            "site_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the App Service.\nApp names only allow alphanumeric characters and hyphens, cannot start or end in a hyphen, and must be less than 60 chars."
              }
            },
            "virtualNetwork_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Virtual Network for both the Application Gateway and App Service Environment"
              }
            },
            "appServiceSubnet_ID": {
              "type": "string",
              "metadata": {
                "description": "Subnet ID of the Subnet that the App Service will be vnet injected into"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "appService_to_VirtualNetwork_Link_Name": "[format('{0}_to_{1}', parameters('site_Name'), parameters('virtualNetwork_Name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-09-01",
              "name": "[parameters('appServicePlan_Name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
              },
              "kind": "app",
              "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('site_Name'), 'ftp')]",
              "properties": {
                "allow": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('site_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('site_Name'), 'scm')]",
              "properties": {
                "allow": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('site_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('site_Name'), 'web')]",
              "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                  "Default.htm",
                  "Default.html",
                  "Default.asp",
                  "index.htm",
                  "index.html",
                  "iisstart.htm",
                  "default.aspx",
                  "index.php",
                  "hostingstart.html"
                ],
                "netFrameworkVersion": "v7.0",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$jamesgbicepwebsite",
                "scmType": "GitHubAction",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                  {
                    "virtualPath": "/",
                    "physicalPath": "site\\wwwroot",
                    "preloadEnabled": true
                  }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                  "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetName": "[variables('appService_to_VirtualNetwork_Link_Name')]",
                "vnetRouteAllEnabled": true,
                "vnetPrivatePortsCount": 0,
                "publicNetworkAccess": "Enabled",
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                  {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 2147483647,
                    "name": "Allow all",
                    "description": "Allow all access"
                  }
                ],
                "ipSecurityRestrictionsDefaultAction": "Allow",
                "scmIpSecurityRestrictions": [
                  {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 2147483647,
                    "name": "Allow all",
                    "description": "Allow all access"
                  }
                ],
                "scmIpSecurityRestrictionsDefaultAction": "Allow",
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 0,
                "azureStorageAccounts": {}
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('site_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/hostNameBindings",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('site_Name'), format('{0}.azurewebsites.net', parameters('site_Name')))]",
              "properties": {
                "siteName": "jamesgbicepwebsite",
                "hostNameType": "Verified"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('site_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-09-01",
              "name": "[parameters('site_Name')]",
              "location": "[parameters('location')]",
              "kind": "app",
              "properties": {
                "enabled": true,
                "hostNameSslStates": [
                  {
                    "name": "[format('{0}.azurewebsites.net', parameters('site_Name'))]",
                    "sslState": "Disabled",
                    "hostType": "Standard"
                  },
                  {
                    "name": "[format('{0}.scm.azurewebsites.net', parameters('site_Name'))]",
                    "sslState": "Disabled",
                    "hostType": "Repository"
                  }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlan_Name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": true,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                  "numberOfWorkers": 1,
                  "acrUseManagedIdentityCreds": false,
                  "alwaysOn": true,
                  "http20Enabled": false,
                  "functionAppScaleLimit": 0,
                  "minimumElasticInstanceCount": 0
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "3090E394E60D6B59248A348EFCDF9229D62149FBCB879BDCD211F73F69D00FFC",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "storageAccountRequired": false,
                "virtualNetworkSubnetId": "[parameters('appServiceSubnet_ID')]",
                "keyVaultReferenceIdentity": "SystemAssigned"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlan_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/virtualNetworkConnections",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}/{1}', parameters('site_Name'), variables('appService_to_VirtualNetwork_Link_Name'))]",
              "properties": {
                "vnetResourceId": "[parameters('appServiceSubnet_ID')]",
                "isSwift": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('site_Name'))]"
              ]
            }
          ],
          "outputs": {
            "website_FQDN": {
              "type": "string",
              "value": "[format('{0}.azurewebsites.net', parameters('site_Name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "contosoDotCom",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "privateDNSZone_Name": {
            "value": "[variables('virtualMachine_Website_DomainName')]"
          },
          "virtualNetworkIDs": {
            "value": [
              "[reference(resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub'), '2022-09-01').outputs.virtualNetwork_ID.value]"
            ]
          },
          "registrationEnabled": {
            "value": true
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "1421978730441999781"
            }
          },
          "parameters": {
            "privateDNSZone_Name": {
              "type": "string"
            },
            "registrationEnabled": {
              "type": "bool",
              "defaultValue": false
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            },
            "virtualNetworkIDs": {
              "type": "array"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[parameters('privateDNSZone_Name')]",
              "location": "global",
              "tags": "[parameters('tagValues')]"
            },
            {
              "copy": {
                "name": "virtualNetworkLink",
                "count": "[length(parameters('virtualNetworkIDs'))]"
              },
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('privateDNSZone_Name'), last(split(parameters('virtualNetworkIDs')[copyIndex()], '/')))]",
              "location": "global",
              "properties": {
                "registrationEnabled": "[parameters('registrationEnabled')]",
                "virtualNetwork": {
                  "id": "[parameters('virtualNetworkIDs')[copyIndex()]]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZone_Name'))]"
              ]
            }
          ],
          "outputs": {
            "PrivateDNSZone_Name": {
              "type": "string",
              "value": "[parameters('privateDNSZone_Name')]"
            },
            "PrivateDNSZone_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDNSZone_Name'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "ARecord_AppGW",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ARecord_name": {
            "value": "appgw"
          },
          "ipv4Address": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'AppGW'), '2022-09-01').outputs.ApplicationGateway_FrontendIP_Private.value]"
          },
          "PrivateDNSZone_Name": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'contosoDotCom'), '2022-09-01').outputs.PrivateDNSZone_Name.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "12417488553456530865"
            }
          },
          "parameters": {
            "PrivateDNSZone_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Private DNS Zone that the record will be created in."
              }
            },
            "ARecord_name": {
              "type": "string",
              "metadata": {
                "description": "Name of the A record."
              }
            },
            "ipv4Address": {
              "type": "string",
              "metadata": {
                "description": "IPv4 Address of the A record."
              }
            },
            "ttlInSeconds": {
              "type": "int",
              "defaultValue": 3600,
              "metadata": {
                "description": "Time to Live for the A record in seconds.  Default is 3600 (1 hour)."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones/A",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', parameters('PrivateDNSZone_Name'), parameters('ARecord_name'))]",
              "properties": {
                "aRecords": [
                  {
                    "ipv4Address": "[parameters('ipv4Address')]"
                  }
                ],
                "ttl": "[parameters('ttlInSeconds')]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'AppGW')]",
        "[resourceId('Microsoft.Resources/deployments', 'contosoDotCom')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "webServVM_Win",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "webserVM-Win"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "[variables('virtualMachine_ScriptFileLocation')]"
          },
          "virtualMachine_ScriptFileName": {
            "value": "WinServ2022_ConfigScript_WebServer.ps1"
          },
          "commandToExecute": {
            "value": "[format('powershell.exe -ExecutionPolicy Unrestricted -File WinServ2022_ConfigScript_WebServer.ps1 -Username {0} -FQDN webserverVM.{1}', parameters('virtualMachine_AdminUsername'), variables('virtualMachine_Website_DomainName'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "427334920654472171"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "maxLength": 15,
              "metadata": {
                "description": "Name of the Virtual Machine"
              }
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\nExamples:\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\nExample: WinServ2022_ConfigScript_General.ps1"
              }
            },
            "commandToExecute": {
              "type": "string",
              "metadata": {
                "description": "'Command to execute while the Virtual Machine is being created.\nExample:\n'powershell.exe -ExecutionPolicy Unrestricted -File <file name.ps1>'\n"
              }
            },
            "addPublicIPAddress": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Adds a Public IP to the Network Interface of the Virtual Machine"
              }
            },
            "privateIPAllocationMethod": {
              "type": "string",
              "defaultValue": "Dynamic",
              "allowedValues": [
                "Dynamic",
                "Static"
              ],
              "metadata": {
                "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
              }
            },
            "privateIPAddress": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2022-11-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "MicrosoftWindowsServer",
                    "offer": "WindowsServer",
                    "sku": "2022-datacenter-azure-edition",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Windows",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "managedDisk": {
                      "storageAccountType": "Standard_LRS"
                    },
                    "deleteOption": "Delete",
                    "diskSizeGB": 127
                  },
                  "dataDisks": [],
                  "diskControllerType": "SCSI"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "windowsConfiguration": {
                    "provisionVMAgent": true,
                    "enableAutomaticUpdates": true,
                    "patchSettings": {
                      "patchMode": "AutomaticByOS",
                      "assessmentMode": "ImageDefault",
                      "enableHotpatching": false
                    },
                    "enableVMAgentPlatformUpdates": false
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  },
                  "addPublicIPAddress": {
                    "value": "[parameters('addPublicIPAddress')]"
                  },
                  "privateIPAllocationMethod": {
                    "value": "[parameters('privateIPAllocationMethod')]"
                  },
                  "privateIPAddress": {
                    "value": "[parameters('privateIPAddress')]"
                  },
                  "tagValues": {
                    "value": "[parameters('tagValues')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "11358289721704706086"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter that the resource is deployed to"
                      }
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "privateIPAllocationMethod": {
                      "type": "string",
                      "defaultValue": "Dynamic",
                      "allowedValues": [
                        "Dynamic",
                        "Static"
                      ],
                      "metadata": {
                        "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                      }
                    },
                    "privateIPAddress": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    },
                    "addPublicIPAddress": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Adds a Public IP to the Network Interface of the Virtual Machine if true."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('addPublicIPAddress'))]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": true,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                              }
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}_PIP', parameters('networkInterface_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), parameters('networkInterface_Name'), parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name)]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id)]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress)]"
                    },
                    "networkInterface_PublicIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name'))), '2023-06-01').ipAddress, '')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "virtualMachine_Name": {
              "type": "string",
              "value": "[parameters('virtualMachine_Name')]"
            },
            "virtualMachine_Id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
            },
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            },
            "networkInterface_PublicIPAddress": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PublicIPAddress.value, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "webServVM_Ubn",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "acceleratedNetworking": {
            "value": "[parameters('acceleratedNetworking')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub'), '2022-09-01').outputs.general_SubnetID.value]"
          },
          "virtualMachine_AdminPassword": {
            "value": "[parameters('virtualMachine_AdminPassword')]"
          },
          "virtualMachine_AdminUsername": {
            "value": "[parameters('virtualMachine_AdminUsername')]"
          },
          "virtualMachine_Name": {
            "value": "webServVM-Ubn"
          },
          "virtualMachine_Size": {
            "value": "[parameters('virtualMachine_Size')]"
          },
          "virtualMachine_ScriptFileLocation": {
            "value": "[variables('virtualMachine_ScriptFileLocation')]"
          },
          "virtualMachine_ScriptFileName": {
            "value": "Ubuntu20_WebServer_Config.sh"
          },
          "commandToExecute": {
            "value": "[format('./Ubuntu20_WebServer_Config.sh webServVM-Ubn.{0}', variables('virtualMachine_Website_DomainName'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "14470086615027683818"
            }
          },
          "parameters": {
            "location": {
              "type": "string"
            },
            "virtualMachine_Name": {
              "type": "string",
              "maxLength": 15,
              "metadata": {
                "description": "Name of the Virtual Machine"
              }
            },
            "virtualMachine_Size": {
              "type": "string",
              "metadata": {
                "description": "Size of the Virtual Machine\nExamples:\nB2ms - 2 Core 8GB Ram - Cannot use Accelerated Networking\nD2as_v5 2 Core 8GB Ram - Uses Accelerated Networking"
              }
            },
            "virtualMachine_AdminUsername": {
              "type": "string",
              "metadata": {
                "description": "Admin Username for the Virtual Machine"
              }
            },
            "virtualMachine_AdminPassword": {
              "type": "securestring",
              "metadata": {
                "description": "Password for the Virtual Machine Admin User"
              }
            },
            "networkInterface_Name": {
              "type": "string",
              "defaultValue": "[format('{0}_NetworkInterface', parameters('virtualMachine_Name'))]",
              "metadata": {
                "description": "Name of the Virtual Machines Network Interface"
              }
            },
            "acceleratedNetworking": {
              "type": "bool",
              "metadata": {
                "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
              }
            },
            "subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
              }
            },
            "privateIPAllocationMethod": {
              "type": "string",
              "defaultValue": "Dynamic",
              "allowedValues": [
                "Dynamic",
                "Static"
              ],
              "metadata": {
                "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
              }
            },
            "privateIPAddress": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
              }
            },
            "addPublicIPAddress": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Adds a Public IP to the Network Interface of the Virtual Machine"
              }
            },
            "virtualMachine_ScriptFileLocation": {
              "type": "string",
              "defaultValue": "https://raw.githubusercontent.com/jimgodden/Azure_Networking_Labs/main/scripts/",
              "metadata": {
                "description": "Location of the file to be ran while the Virtual Machine is being created.  Ensure that the path ends with a /\nExample: https://example.com/scripts/"
              }
            },
            "virtualMachine_ScriptFileName": {
              "type": "string",
              "metadata": {
                "description": "Name of the file to be ran while the Virtual Machine is being created\nExample: Ubuntu20_DNS_Config.sh"
              }
            },
            "commandToExecute": {
              "type": "string"
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "variables": {
            "virtualMachine_ScriptFileUri": "[format('{0}{1}', parameters('virtualMachine_ScriptFileLocation'), parameters('virtualMachine_ScriptFileName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2023-03-01",
              "name": "[parameters('virtualMachine_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachine_Size')]"
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "canonical",
                    "offer": "0001-com-ubuntu-server-focal",
                    "sku": "20_04-lts-gen2",
                    "version": "latest"
                  },
                  "osDisk": {
                    "osType": "Linux",
                    "name": "[format('{0}_OsDisk_1', parameters('virtualMachine_Name'))]",
                    "createOption": "FromImage",
                    "caching": "ReadWrite",
                    "deleteOption": "Delete"
                  },
                  "dataDisks": []
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachine_Name')]",
                  "adminUsername": "[parameters('virtualMachine_AdminUsername')]",
                  "adminPassword": "[parameters('virtualMachine_AdminPassword')]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": false,
                    "provisionVMAgent": true,
                    "patchSettings": {
                      "patchMode": "ImageDefault",
                      "assessmentMode": "ImageDefault"
                    }
                  },
                  "secrets": [],
                  "allowExtensionOperations": true
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]",
                      "properties": {
                        "deleteOption": "Delete"
                      }
                    }
                  ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true
                  }
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'AzureNetworkWatcherExtension')]",
              "location": "[parameters('location')]",
              "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentLinux",
                "typeHandlerVersion": "1.4"
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Compute/virtualMachines/extensions",
              "apiVersion": "2021-11-01",
              "name": "[format('{0}/{1}', parameters('virtualMachine_Name'), 'installcustomscript')]",
              "location": "[parameters('location')]",
              "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "[variables('virtualMachine_ScriptFileUri')]"
                  ]
                },
                "protectedSettings": {
                  "commandToExecute": "[parameters('commandToExecute')]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachine_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[parameters('networkInterface_Name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "acceleratedNetworking": {
                    "value": "[parameters('acceleratedNetworking')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "networkInterface_Name": {
                    "value": "[parameters('networkInterface_Name')]"
                  },
                  "subnet_ID": {
                    "value": "[parameters('subnet_ID')]"
                  },
                  "privateIPAddress": {
                    "value": "[parameters('privateIPAddress')]"
                  },
                  "addPublicIPAddress": {
                    "value": "[parameters('addPublicIPAddress')]"
                  },
                  "privateIPAllocationMethod": {
                    "value": "[parameters('privateIPAllocationMethod')]"
                  },
                  "tagValues": {
                    "value": "[parameters('tagValues')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.32.4.45862",
                      "templateHash": "11358289721704706086"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "metadata": {
                        "description": "Azure Datacenter that the resource is deployed to"
                      }
                    },
                    "networkInterface_Name": {
                      "type": "string",
                      "metadata": {
                        "description": "Name of the Virtual Machines Network Interface"
                      }
                    },
                    "acceleratedNetworking": {
                      "type": "bool",
                      "metadata": {
                        "description": "True enables Accelerated Networking and False disabled it.  Not all virtualMachine sizes support Accel Net"
                      }
                    },
                    "privateIPAllocationMethod": {
                      "type": "string",
                      "defaultValue": "Dynamic",
                      "allowedValues": [
                        "Dynamic",
                        "Static"
                      ],
                      "metadata": {
                        "description": "Sets the allocation mode of the IP Address of the Network Interface to either Dynamic or Static."
                      }
                    },
                    "privateIPAddress": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Enter the Static IP Address here if privateIPAllocationMethod is set to Static."
                      }
                    },
                    "subnet_ID": {
                      "type": "string",
                      "metadata": {
                        "description": "The Resource ID of the subnet to which the Network Interface will be assigned."
                      }
                    },
                    "addPublicIPAddress": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Adds a Public IP to the Network Interface of the Virtual Machine if true."
                      }
                    },
                    "tagValues": {
                      "type": "object",
                      "defaultValue": {}
                    }
                  },
                  "resources": [
                    {
                      "condition": "[not(parameters('addPublicIPAddress'))]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]"
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": true,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]"
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2022-09-01",
                      "name": "[parameters('networkInterface_Name')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "ipConfigurations": [
                          {
                            "name": "ipconfig0",
                            "properties": {
                              "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                              "subnet": {
                                "id": "[parameters('subnet_ID')]"
                              },
                              "primary": true,
                              "privateIPAddressVersion": "IPv4",
                              "privateIPAddress": "[parameters('privateIPAddress')]",
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                              }
                            }
                          }
                        ],
                        "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                        "enableIPForwarding": false,
                        "disableTcpStateTracking": false,
                        "nicType": "Standard"
                      },
                      "tags": "[parameters('tagValues')]",
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name')))]"
                      ]
                    },
                    {
                      "condition": "[parameters('addPublicIPAddress')]",
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2023-06-01",
                      "name": "[format('{0}_PIP', parameters('networkInterface_Name'))]",
                      "location": "[parameters('location')]",
                      "sku": {
                        "name": "Standard",
                        "tier": "Regional"
                      },
                      "properties": {
                        "publicIPAddressVersion": "IPv4",
                        "publicIPAllocationMethod": "Static",
                        "idleTimeoutInMinutes": 4,
                        "ipTags": []
                      },
                      "tags": "[parameters('tagValues')]"
                    }
                  ],
                  "outputs": {
                    "networkInterface_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), parameters('networkInterface_Name'), parameters('networkInterface_Name'))]"
                    },
                    "networkInterface_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')))]"
                    },
                    "networkInterface_IPConfig0_Name": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].name)]"
                    },
                    "networkInterface_IPConfig0_ID": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].id)]"
                    },
                    "networkInterface_PrivateIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress, reference(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterface_Name')), '2022-09-01').ipConfigurations[0].properties.privateIPAddress)]"
                    },
                    "networkInterface_PublicIPAddress": {
                      "type": "string",
                      "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('networkInterface_Name'))), '2023-06-01').ipAddress, '')]"
                    }
                  }
                }
              }
            }
          ],
          "outputs": {
            "virtualMachine_Name": {
              "type": "string",
              "value": "[parameters('virtualMachine_Name')]"
            },
            "networkInterface_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_Name.value]"
            },
            "networkInterface_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_ID.value]"
            },
            "networkInterface_IPConfig0_Name": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_Name.value]"
            },
            "networkInterface_IPConfig0_ID": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_IPConfig0_ID.value]"
            },
            "networkInterface_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PrivateIPAddress.value]"
            },
            "networkInterface_PublicIPAddress": {
              "type": "string",
              "value": "[if(parameters('addPublicIPAddress'), reference(resourceId('Microsoft.Resources/deployments', parameters('networkInterface_Name')), '2022-09-01').outputs.networkInterface_PublicIPAddress.value, '')]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub')]"
      ]
    },
    {
      "condition": "[parameters('isUsingAzureFirewall')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "AzFW",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "azureFirewall_Name": {
            "value": "AzFW"
          },
          "azureFirewall_SKU": {
            "value": "[parameters('azureFirewall_SKU')]"
          },
          "azureFirewall_ManagementSubnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub'), '2022-09-01').outputs.azureFirewallManagement_SubnetID.value]"
          },
          "azureFirewallPolicy_Name": {
            "value": "AzFW_Policy"
          },
          "azureFirewall_Subnet_ID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub'), '2022-09-01').outputs.azureFirewall_SubnetID.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "3831283260328725977"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter location that the main resouces will be deployed to."
              }
            },
            "azureFirewall_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Firewall within the vHub A"
              }
            },
            "azureFirewall_SKU": {
              "type": "string",
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "Sku name of the Azure Firewall.  Allowed values are Basic, Standard, and Premium"
              }
            },
            "azureFirewallPolicy_Name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Firewall Policy"
              }
            },
            "azureFirewall_Subnet_ID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the Azure Firewall Subnet.  Note: The subnet name must be \"AzureFirewallSubnet"
              }
            },
            "azureFirewall_ManagementSubnet_ID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the Azure Firewall Management Subnet.  Note: The subnet name must be \"AzureFirewallManagementSubnet"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_PIP', parameters('azureFirewall_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}_Management_PIP', parameters('azureFirewall_Name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/firewallPolicies",
              "apiVersion": "2022-07-01",
              "name": "[parameters('azureFirewallPolicy_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "tier": "[parameters('azureFirewall_SKU')]"
                }
              },
              "tags": "[parameters('tagValues')]"
            },
            {
              "type": "Microsoft.Network/azureFirewalls",
              "apiVersion": "2022-11-01",
              "name": "[parameters('azureFirewall_Name')]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "AZFW_VNet",
                  "tier": "[parameters('azureFirewall_SKU')]"
                },
                "additionalProperties": {},
                "managementIpConfiguration": {
                  "name": "managementipconfig",
                  "properties": {
                    "publicIPAddress": {
                      "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_Management_PIP', parameters('azureFirewall_Name')))]"
                    },
                    "subnet": {
                      "id": "[parameters('azureFirewall_ManagementSubnet_ID')]"
                    }
                  }
                },
                "ipConfigurations": [
                  {
                    "name": "ipconfiguration",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('azureFirewall_Name')))]"
                      },
                      "subnet": {
                        "id": "[parameters('azureFirewall_Subnet_ID')]"
                      }
                    }
                  }
                ],
                "firewallPolicy": {
                  "id": "[resourceId('Microsoft.Network/firewallPolicies', parameters('azureFirewallPolicy_Name'))]"
                }
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_Management_PIP', parameters('azureFirewall_Name')))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_PIP', parameters('azureFirewall_Name')))]",
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('azureFirewallPolicy_Name'))]"
              ]
            },
            {
              "type": "Microsoft.Network/firewallPolicies/ruleCollectionGroups",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('azureFirewallPolicy_Name'), 'DefaultNetworkRuleCollectionGroup')]",
              "properties": {
                "priority": 200,
                "ruleCollections": [
                  {
                    "name": "allowall",
                    "priority": 100,
                    "ruleCollectionType": "FirewallPolicyFilterRuleCollection",
                    "action": {
                      "type": "Allow"
                    },
                    "rules": [
                      {
                        "ruleType": "NetworkRule",
                        "name": "any",
                        "ipProtocols": [
                          "any"
                        ],
                        "sourceAddresses": [
                          "*"
                        ],
                        "destinationAddresses": [
                          "*"
                        ],
                        "destinationPorts": [
                          "*"
                        ]
                      }
                    ]
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/firewallPolicies', parameters('azureFirewallPolicy_Name'))]"
              ]
            }
          ],
          "outputs": {
            "azureFirewall_PrivateIPAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/azureFirewalls', parameters('azureFirewall_Name')), '2022-11-01').ipConfigurations[0].properties.privateIPAddress]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'AppGW')]",
        "[resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "hubBastion",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "bastion_name": {
            "value": "Bastion_Hub"
          },
          "bastion_SubnetID": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub'), '2022-09-01').outputs.bastion_SubnetID.value]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.32.4.45862",
              "templateHash": "8940753681302617038"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "Azure Datacenter location that the main resouces will be deployed to."
              }
            },
            "bastion_name": {
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Bastion"
              }
            },
            "bastion_SubnetID": {
              "type": "string",
              "metadata": {
                "description": "Resource ID of the subnet the Azure Bastion will be placed in.  The name of the subnet must be \"AzureBastionSubnet\""
              }
            },
            "enableTunneling": {
              "type": "bool",
              "defaultValue": false
            },
            "enableIpConnect": {
              "type": "bool",
              "defaultValue": false
            },
            "disableCopyPaste": {
              "type": "bool",
              "defaultValue": false
            },
            "enableShareableLink": {
              "type": "bool",
              "defaultValue": false
            },
            "enableFileCopy": {
              "type": "bool",
              "defaultValue": false
            },
            "enableKerberos": {
              "type": "bool",
              "defaultValue": false
            },
            "enablePrivateOnlyBastion": {
              "type": "bool",
              "defaultValue": false
            },
            "bastion_SKU": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "metadata": {
                "description": "SKU of the Azure Bastion"
              }
            },
            "tagValues": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/bastionHosts",
              "apiVersion": "2024-05-01",
              "name": "[parameters('bastion_name')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('bastion_SKU')]"
              },
              "properties": {
                "scaleUnits": 2,
                "enableTunneling": "[parameters('enableTunneling')]",
                "enableIpConnect": "[parameters('enableIpConnect')]",
                "disableCopyPaste": "[parameters('disableCopyPaste')]",
                "enableShareableLink": "[parameters('enableShareableLink')]",
                "enableFileCopy": "[parameters('enableFileCopy')]",
                "enableKerberos": "[parameters('enableKerberos')]",
                "enablePrivateOnlyBastion": "[parameters('enablePrivateOnlyBastion')]",
                "ipConfigurations": [
                  {
                    "name": "IpConf",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('bastion_name')))]"
                      },
                      "subnet": {
                        "id": "[parameters('bastion_SubnetID')]"
                      }
                    }
                  }
                ]
              },
              "tags": "[parameters('tagValues')]",
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}_VIP', parameters('bastion_name')))]"
              ]
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-09-01",
              "name": "[format('{0}_VIP', parameters('bastion_name'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard",
                "tier": "Regional"
              },
              "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
              },
              "tags": "[parameters('tagValues')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'VirtualNetworkHub')]"
      ]
    }
  ]
}
